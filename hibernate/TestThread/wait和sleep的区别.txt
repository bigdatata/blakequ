 在我们学完android的多线程的基本概念之后，我们接下来要了解的是多线程的休眠机制，这个是必须要了解的，
 很多地方有用到，比如控制多线程的访问速度等。同时也为多线程锁以及同步提供了很好的基础，
 想学好多线程必须要掌握好这个环节，也就是线程的休眠机制，学好这个也就相当于入了线程同步机制的门。

sleep是线程被调用时，占着cpu去睡觉，其他线程不能占用cpu，os认为该线程正在工作，
不会让出系统资源，wait是进入等待池等待，让出系统资源，其他线程可以占用cpu，
一般wait不会加时间限制，因为如果wait的线程运行资源不够，再出来也没用，
要等待其他线程调用notifyall方法唤醒等待池中的所有线程，才会在进入就绪序列等待os分配系统资源， 

sleep是静态方法，是谁掉的谁去睡觉，就算是在main线程里调用了线程b的sleep方法，
实际上还是main去睡觉，想让线程b去睡觉要在b的代码中掉sleep。


sleep(100L)是占用cpu，线程休眠100毫秒，其他进程不能再占用cpu资源，
wait（100L）是进入等待池中等待，交出cpu等系统资源供其他进程使用，在这100毫秒中，
该线程可以被其他线程notify，但不同的是其他在等待池中的线程不被notify不会出来，
但这个线程在等待100毫秒后会自动进入就绪队列等待系统分配资源，换句话说，sleep（100）在100毫秒后肯定会运行，
但wait在100毫秒后还有等待os调用分配资源，所以wait100的停止运行时间是不确定的，但至少是100毫秒。